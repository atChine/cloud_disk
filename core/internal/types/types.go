// Code generated by goctl. DO NOT EDIT.
package types

type ShareFileBasicDetailRequest struct {
	Identity string `json:"identity"` //分享资源表identity
}

type ShareFileBasicDetailReplay struct {
	RepositoryIdentity string `json:"repository_identity"` //资源表identity
	Name               string `json:"name"`                //资源名称
	Size               int64  `json:"size"`                //资源大小
	Ext                string `json:"ext"`                 //资源扩展名
	Path               string `json:"path"`                //资源路径
}

type FileUploadChunkEndRequest struct {
	Key       string      `json:"key"`       //文件唯一标识
	UploadId  string      `json:"upload_id"` //文件唯一标识
	CosObject []CosObject `json:"cos_object"`
}

type CosObject struct {
	PartNumber int    `json:"part_number"` //分片编号
	ETag       string `json:"e_tag"`       //文件唯一标识
}

type FileUploadChunkEndReply struct {
}

type FileUploadChunkRequest struct {
}

type FileUploadChunkReply struct {
	Etag string `json:"etag"` //文件唯一标识,就是md5
}

type FileUploadPrePareRequest struct {
	Md5  string `json:"md5"`  //文件md5,用来判断文件是否存在
	Name string `json:"name"` //文件名称
	Ext  string `json:"ext"`  //文件扩展名
}

type FileUploadPrePareReply struct {
	Identity string `json:"identity"`  //文件如果存在，则返回文件identity
	UploadId string `json:"upload_id"` //如果文件不存在，则返回上传id
	Key      string `json:"key"`       //文件key
}

type RefreshAuthorizationRequest struct {
}

type RefreshAuthorizationReply struct {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

type ShareFileSaveRequest struct {
	RepositoryIdentity string `json:"repository_identity"`
	ParentId           int64  `json:"parent_id"` //父文件夹id
}

type ShareFileSaveReply struct {
	Identity string `json:"identity"` //用户池子的identity
}

type UserShareCreateRequest struct {
	UserRepositoryIdentity string `json:"user_repository_identity"` //文件仓库标识
	ExpiredTime            int    `json:"expired_time"`             //过期时间
}

type UserShareCreateReply struct {
	Identity string `json:"identity"` //文件分享标识
}

type UserFileMoveRequest struct {
	Identity       string `json:"identity"`        //文件标识
	ParentIdentity string `json:"parent_identity"` //父文件夹身份标识
}

type UserFileMoveReply struct {
}

type UserFileDeleteRequest struct {
	Identity string `json:"identity"`
}

type UserFileDeleteReply struct {
}

type UserFolderCreateRequest struct {
	ParentId int64  `json:"parentId"` //文件夹层级
	Name     string `json:"name"`     //文件夹名字
}

type UserFolderCreateReply struct {
	Identity string `json:"identity"` //文件夹标识
}

type UserFileNameUpdateRequest struct {
	Identity string `json:"identity"`
	Name     string `json:"name"`
}

type UserFileNameUpdateReply struct {
}

type UserFileListRequest struct {
	Id   int64 `json:"id,optional"`
	Page int   `json:"page,optional"`
	Size int   `json:"size,optional"`
}

type UserFileListReply struct {
	List  []*UserFile `json:"list,optional"`
	Count int64       `json:"count,optional"`
}

type UserFile struct {
	Id                 int64  `json:"id,optional"`
	Identity           string `json:"identity,optional"`
	RepositoryIdentity string `json:"repository_identity,optional"`
	Name               string `json:"name,optional"`
	Exc                string `json:"exc,optional"`
	Size               int64  `json:"size,optional"`
	Path               string `json:"path,optional"`
}

type UserRepositorySaveRequest struct {
	ParentId           int64  `json:"parentId"`
	RepositoryIdentity string `json:"repositoryIdentity"`
	Ext                string `json:"ext"`
	Name               string `json:"name"`
}

type UserRepositorySaveReply struct {
}

type FileUploadRequest struct {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}

type FileUploadReply struct {
	Identity string `json:"identity"`
	Ext      string `json:"ext"`
	Name     string `json:"name"`
}

type UserRegisterRequest struct {
	Name     string `json:"name"`
	Password string `json:"password"`
	Email    string `json:"email"`
	Code     string `json:"code"`
}

type UserRegisterReplay struct {
}

type LoginRequest struct {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginReplay struct {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
}

type DetailRequest struct {
	Identity string `json:"identity"`
}

type DetailReplay struct {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type MailCodeSendRequest struct {
	Email string `json:"email"`
}

type MailCodeSendReplay struct {
}
